{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction _templateObject5() {\n  var data = _taggedTemplateLiteral([\"\\n  margin: 0;\\n  padding: 0 0.5rem;\\n  width: 100%;\\n  height: 2.5rem;\\n  font-size: 0.875rem;\\n  font-weight: 400;\\n  border: 1px solid #e5e5e5;\\n  border-radius: 4px;\\n\\n  :hover,\\n  :focus {\\n    border-color: hsl(0, 0%, 70%);\\n  }\\n\"]);\n\n  _templateObject5 = function _templateObject5() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteral([\"\\n  margin-left: auto;\\n\"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n  margin-right: 1rem;\\n  width: 300px;\\n  font-size: 0.875rem;\\n  z-index: 3;\\n\\n  > div {\\n    border-color: #e5e5e5;\\n  }\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  display: flex;\\n  justify-content: space-between;\\n  align-items: center;\\n  margin-bottom: 1rem;\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  width: 100%;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport dynamic from \"next/dynamic\";\nimport React, { useEffect, useState } from \"react\";\nimport service from \"../../utils/service\";\nimport Select from \"react-select\";\nimport { EmptyLayout } from \"layouts\";\nimport { Button } from \"styles\";\nimport \"codemirror/lib/codemirror.css\";\nimport \"@toast-ui/editor/dist/toastui-editor.css\";\nimport \"tui-color-picker/dist/tui-color-picker.css\";\nimport \"highlight.js/styles/railscasts.css\";\nimport styled from \"styles/styled\";\nimport { useRouter } from \"next/router\";\nimport { useMutation, useQuery } from \"@apollo/react-hooks\";\nimport { CREATE_POST, MODIFY_POST, GET_POST } from \"@api/Post\";\nimport { GET_CATEGORIES } from \"@api/Category\";\nvar Editor = dynamic(function () {\n  return import(\"components/TuiEditorWrapper\");\n}, {\n  ssr: false,\n  loadableGenerated: {\n    webpack: function webpack() {\n      return [require.resolveWeak(\"components/TuiEditorWrapper\")];\n    },\n    modules: [\"components/TuiEditorWrapper\"]\n  }\n});\nvar EditorWithForwardedRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/_jsx(Editor, _objectSpread(_objectSpread({}, props), {}, {\n    forwardedRef: ref\n  }));\n});\n\nvar WysiwygEditor = function WysiwygEditor() {\n  var router = useRouter();\n  var id = router.query.id;\n\n  var _useState = useState({\n    title: \"\",\n    category: \"\",\n    html: \"\",\n    html2: \"\",\n    email: \"ru_bryunak@naver.com\",\n    markdown: \"\"\n  }),\n      post = _useState[0],\n      setPost = _useState[1];\n\n  var _useState2 = useState([]),\n      image = _useState2[0],\n      setImage = _useState2[1];\n\n  var _useState3 = useState([]),\n      options = _useState3[0],\n      setOptions = _useState3[1];\n\n  var editorRef = React.useRef();\n  var imageUploadRef = React.useRef(null);\n  useQuery(GET_CATEGORIES, {\n    fetchPolicy: \"cache-first\",\n    onCompleted: function onCompleted(data) {\n      var dummy = data.getCategories.reduce(function (acc, cur) {\n        acc.push({\n          value: cur.category.toLowerCase(),\n          label: cur.category\n        });\n        return acc;\n      }, []);\n      setOptions(dummy);\n    }\n  });\n  useQuery(GET_POST, {\n    fetchPolicy: \"network-only\",\n    variables: {\n      id: id\n    },\n    skip: !id,\n    onCompleted: function onCompleted(data) {\n      var post = data.getPost;\n      setPost({\n        email: post.user.email,\n        category: post.category,\n        title: post.title,\n        html: post.html,\n        markdown: post.markdown,\n        image: post.image,\n        html2: post.html2\n      });\n    }\n  });\n\n  var handleChange = function handleChange() {\n    if (!editorRef.current) {\n      return;\n    }\n\n    var instance = editorRef.current.getInstance();\n    var html2 = document.querySelector(\".tui-editor-contents\").innerHTML;\n    setPost(_objectSpread(_objectSpread({}, post), {}, {\n      html: instance.getHtml(),\n      html2: html2,\n      markdown: instance.getMarkdown()\n    }));\n  };\n\n  var handleSelect = function handleSelect(newValue) {\n    if (newValue) {\n      setPost(_objectSpread(_objectSpread({}, post), {}, {\n        category: newValue.value\n      }));\n    } else {\n      setPost(_objectSpread(_objectSpread({}, post), {}, {\n        category: null\n      }));\n    }\n  };\n\n  var handleTitle = function handleTitle(event) {\n    var value = event.target.value;\n    setPost(_objectSpread(_objectSpread({}, post), {}, {\n      title: value\n    }));\n  };\n\n  var _useMutation = useMutation(id ? MODIFY_POST : CREATE_POST, {\n    onCompleted: function onCompleted() {\n      router.push(\"/\".concat(post.category));\n    }\n  }),\n      _useMutation2 = _slicedToArray(_useMutation, 1),\n      EditPostMutation = _useMutation2[0];\n\n  var Submit = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return EditPostMutation({\n                variables: id ? {\n                  id: id,\n                  input: post\n                } : {\n                  input: post\n                }\n              });\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function Submit() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var addImageBlobHook = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(blob, callback) {\n      var formData, _yield$service$post, data, elements, images;\n\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              formData = new FormData();\n              formData.append(\"img\", blob);\n              _context2.next = 4;\n              return service.post(\"/upload\", formData);\n\n            case 4:\n              _yield$service$post = _context2.sent;\n              data = _yield$service$post.data;\n              callback(data.contents, \"image\");\n              elements = document.querySelectorAll(\".tui-editor-contents img\");\n              images = [];\n              elements.forEach(function (image) {\n                return images.push(image.src);\n              });\n              setImage(images);\n\n            case 11:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function addImageBlobHook(_x, _x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var clickUploadInput = function clickUploadInput() {\n    if (!imageUploadRef.current) return;\n    imageUploadRef.current.click();\n  };\n\n  var uploadFile = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(event) {\n      var files, formData, _yield$service$post2, data, instance, elements, images;\n\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              files = event.target.files;\n              formData = new FormData();\n\n              if (files && files.length > 0) {\n                Array.from(files).forEach(function (item) {\n                  formData.append(\"images\", item);\n                });\n              }\n\n              _context3.next = 5;\n              return service.post(\"/upload\", formData);\n\n            case 5:\n              _yield$service$post2 = _context3.sent;\n              data = _yield$service$post2.data;\n              instance = editorRef.current.getInstance();\n              data.forEach(function (item) {\n                instance.insertText(\"![image](\".concat(item.contents, \")\"));\n              });\n              elements = document.querySelectorAll(\".tui-editor-contents img\");\n              images = [];\n              elements.forEach(function (image) {\n                return images.push(image.src);\n              });\n              setImage(images);\n\n            case 13:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function uploadFile(_x3) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    setPost(_objectSpread(_objectSpread({}, post), {}, {\n      image: image\n    }));\n  }, [image]);\n  return /*#__PURE__*/_jsxs(Wrap, {\n    children: [/*#__PURE__*/_jsxs(RowWrap, {\n      children: [/*#__PURE__*/_jsx(SelectWrap, {\n        instanceId: \"select\",\n        value: options.filter(function (item) {\n          return item.value === post.category;\n        }),\n        onChange: handleSelect,\n        options: options,\n        isClearable: true\n      }), /*#__PURE__*/_jsxs(Button, {\n        onClick: clickUploadInput,\n        children: [\"\\uC774\\uBBF8\\uC9C0 \\uC5C5\\uB85C\\uB4DC\", /*#__PURE__*/_jsx(\"input\", {\n          ref: imageUploadRef,\n          type: \"file\",\n          multiple: true,\n          onChange: uploadFile,\n          style: {\n            display: \"none\"\n          }\n        })]\n      }), /*#__PURE__*/_jsx(ButtonWrap, {\n        variant: id ? \"warning\" : \"success\",\n        height: 38,\n        onClick: Submit,\n        children: id ? \"수정\" : \"등록\"\n      })]\n    }), /*#__PURE__*/_jsx(RowWrap, {\n      children: /*#__PURE__*/_jsx(TitleInput, {\n        onChange: handleTitle,\n        value: post.title,\n        placeholder: \"제목을 입력해주세요.\"\n      })\n    }), /*#__PURE__*/_jsx(EditorWithForwardedRef, {\n      initialValue: post.markdown,\n      previewStyle: \"vertical\",\n      height: \"600px\",\n      initialEditType: \"markdown\",\n      useCommandShortcut: true,\n      ref: editorRef,\n      previewHighlight: false,\n      onChange: handleChange,\n      hooks: {\n        addImageBlobHook: addImageBlobHook\n      }\n    })]\n  });\n};\n\nexport default EmptyLayout(WysiwygEditor);\nvar Wrap = styled.div(_templateObject());\nvar RowWrap = styled.div(_templateObject2());\nvar SelectWrap = styled(Select)(_templateObject3());\nvar ButtonWrap = styled(Button)(_templateObject4());\nvar TitleInput = styled.input(_templateObject5());","map":null,"metadata":{},"sourceType":"module"}
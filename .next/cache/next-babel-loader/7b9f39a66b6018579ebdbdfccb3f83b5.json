{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/loel/Documents/loel-blog/pages/post/[id]/index.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState } from \"react\";\nimport styled from \"styles/styled\";\nimport { DefaultLayout } from \"layouts\";\nimport { useRouter } from \"next/router\";\nimport Head from \"next/head\";\nimport \"codemirror/lib/codemirror.css\";\nimport \"@toast-ui/editor/dist/toastui-editor.css\";\nimport { Button } from \"styles\";\nimport { useQuery, useMutation } from \"@apollo/react-hooks\";\nimport { REMOVE_POST, CREATE_COMMENT, GET_COMMENTS, GET_ALL_POSTS } from \"@api/Post\";\nimport \"prismjs/themes/prism.css\";\nimport { decodeHTMLForHeader, dateDisplay } from \"@utils/common\";\nimport { css } from \"@emotion/core\";\nimport service from \"@utils/service\";\n\nconst Post = ({\n  authority,\n  post\n}) => {\n  const router = useRouter();\n\n  if (router.isFallback) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 12\n    }, this);\n  }\n\n  const id = post.id.toString();\n  const {\n    0: comments,\n    1: setComments\n  } = useState(null);\n  const {\n    0: comment,\n    1: setComment\n  } = useState({\n    name: \"\",\n    password: \"\",\n    contents: \"\",\n    class: 0\n  });\n  useQuery(GET_COMMENTS, {\n    fetchPolicy: \"cache-first\",\n    variables: {\n      postId: id\n    },\n    onCompleted: data => {\n      setComments(data.getComments);\n    }\n  });\n  const [RemovePostMutation] = useMutation(REMOVE_POST, {\n    refetchQueries: [{\n      query: GET_ALL_POSTS\n    }],\n    onCompleted: () => {\n      router.push(`/`);\n    }\n  });\n\n  const pushEditPage = () => {\n    router.push(`/edit?id=${id}`);\n  };\n\n  const remove = async () => {\n    await RemovePostMutation({\n      variables: {\n        id: id\n      }\n    });\n  };\n\n  const autoIncreaseHeight = event => {\n    const {\n      target\n    } = event;\n    target.style.height = `${target.scrollHeight + 2}px`;\n  };\n\n  const handleCommentInput = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setComment(_objectSpread(_objectSpread({}, comment), {}, {\n      [name]: value\n    }));\n  };\n\n  const [CreateCommentMutation] = useMutation(CREATE_COMMENT, {\n    refetchQueries: [{\n      query: GET_COMMENTS,\n      variables: {\n        postId: id\n      }\n    }],\n    awaitRefetchQueries: true,\n    update: (store, {\n      data: {\n        createComment\n      }\n    }) => {\n      const newComments = comments ? [createComment, ...comments] : null;\n      setComments(newComments);\n    },\n    onCompleted: () => {\n      setComment({\n        name: \"\",\n        password: \"\",\n        contents: \"\",\n        class: 0\n      });\n    }\n  });\n\n  const registerComment = async () => {\n    const {\n      name,\n      password,\n      contents\n    } = comment;\n\n    if (!name) {\n      alert(\"닉네임을 입력해주세요.\");\n      return;\n    }\n\n    if (!password) {\n      alert(\"비밀번호를 입력해주세요.\");\n      return;\n    }\n\n    if (!contents) {\n      alert(\"댓글 내용을 입력해주세요.\");\n      return;\n    }\n\n    const user = JSON.parse(localStorage.getItem(\"user\"));\n    await CreateCommentMutation({\n      variables: {\n        comment,\n        postId: id,\n        email: user && user.email ? user.email : \"\"\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: [/*#__PURE__*/_jsxDEV(\"link\", {\n        rel: \"canonical\",\n        href: `https://www.loelblog.com/post/${id}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        name: \"title\",\n        content: `Loel's Blog ${post ? ` - ` + post.title : \"\"}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        name: \"description\",\n        content: decodeHTMLForHeader(post ? post.html : \"음식과 여행을 좋아하는 개발자의 블로그 입니다.\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        property: \"og:title\",\n        content: `Loel's Blog ${post ? ` - ` + post.title : \"\"}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        property: \"og:type\",\n        content: \"article\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        property: \"og:url\",\n        content: `https://www.loelblog.com/post/${id}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        property: \"og:description\",\n        content: decodeHTMLForHeader(post ? post.html : \"음식과 여행을 좋아하는 개발자의 블로그 입니다.\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        property: \"og:image\",\n        content: \"https://images.loelblog.com/thumb/background.jpg\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"title\", {\n        children: `Loel's Blog ${post ? ` - ` + post.title : \"\"}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), post && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(PostWrap, {\n        children: [/*#__PURE__*/_jsxDEV(HeadWrap, {\n          children: [/*#__PURE__*/_jsxDEV(Title, {\n            children: post.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(InfoWrap, {\n            children: [/*#__PURE__*/_jsxDEV(Author, {\n              children: post.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(CreatedAt, {\n              children: dateDisplay(post.updatedAt)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 17\n            }, this), authority && /*#__PURE__*/_jsxDEV(EditWrap, {\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                onClick: pushEditPage,\n                variant: \"warning\",\n                children: \"\\uC218\\uC815\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                onClick: remove,\n                variant: \"danger\",\n                children: \"\\uC0AD\\uC81C\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ContentWrap, {\n          className: \"tui-editor-contents\",\n          dangerouslySetInnerHTML: {\n            __html: post.html2 ? post.html2 : post.html\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(CommentRegisterWrap, {\n        children: [/*#__PURE__*/_jsxDEV(TotalComment, {\n          children: [\"\\uB313\\uAE00 \", comments ? comments.length : 0]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(CommentWriterWrap, {\n            children: [/*#__PURE__*/_jsxDEV(CommentWriterInput, {\n              name: \"name\",\n              maxLength: 40,\n              value: comment.name,\n              onChange: handleCommentInput,\n              placeholder: \"닉네임\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(CommentWriterInput, {\n              name: \"password\",\n              maxLength: 40,\n              value: comment.password,\n              onChange: handleCommentInput,\n              placeholder: \"비밀번호\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(InputComment, {\n            name: \"contents\",\n            value: comment.contents,\n            onChange: handleCommentInput,\n            onInput: autoIncreaseHeight,\n            placeholder: \"댓글을 남겨주세요.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(CommentRegisterButton, {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"success\",\n              width: 120,\n              height: 40,\n              onClick: registerComment,\n              children: \"\\uB313\\uAE00 \\uC791\\uC131\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(CommentsWrap, {\n        children: comments && comments.length > 0 && comments.map(item => {\n          return /*#__PURE__*/_jsxDEV(CommentWrap, {\n            children: [/*#__PURE__*/_jsxDEV(CommentInfoWrap, {\n              children: [/*#__PURE__*/_jsxDEV(CommentWriterName, {\n                children: item.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 160,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(CommentCreatedAt, {\n                children: dateDisplay(item.createdAt)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 161,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Comment, {\n              children: item.contents\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 21\n            }, this)]\n          }, item.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 19\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true);\n};\n\nexport default DefaultLayout(Post);\nexport async function getStaticPaths() {\n  const {\n    data\n  } = await service.get(\"/post\");\n  const paths = data.map(item => ({\n    params: {\n      id: item.id.toString()\n    }\n  }));\n  return {\n    paths,\n    fallback: true\n  };\n}\nexport async function getStaticProps({\n  params\n}) {\n  const {\n    data\n  } = await service.get(`/post/${params.id}`);\n  return {\n    props: {\n      post: data\n    },\n    revalidate: 1\n  };\n}\nconst Border = css`\n  border: 1px solid #e4e4e4;\n  border-radius: 4px;\n`;\nconst PostWrap = styled.section`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  padding: 2rem 0;\n`;\nconst HeadWrap = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 1rem;\n  padding-bottom: 2rem;\n  border-bottom: 1px solid #eee;\n`;\nconst Title = styled.h1`\n  font-size: 2.5rem;\n  line-height: 1.5;\n  font-weight: 800;\n  color: #313131;\n  word-break: keep-all;\n  margin-bottom: 2rem;\n`;\nconst InfoWrap = styled.div`\n  display: flex;\n  font-size: 1rem;\n`;\nconst Author = styled.span`\n  margin-right: 10px;\n  font-weight: 600;\n`;\nconst CreatedAt = styled.span``;\nconst ContentWrap = styled.article`\n  font-size: 1rem;\n\n  img {\n    display: block;\n    max-width: 768px;\n  }\n`;\nconst EditWrap = styled.div`\n  margin-left: auto;\n\n  button + button {\n    margin-left: 0.5rem;\n  }\n`;\nconst CommentRegisterWrap = styled.div`\n  padding-bottom: 2rem;\n`;\nconst TotalComment = styled.div`\n  margin: 0.5rem 0.5rem 1rem;\n  font-weight: 500;\n`;\nconst InputComment = styled.textarea`\n  margin-bottom: 1rem;\n  padding: 0.625rem;\n  width: 100%;\n  min-height: 5rem;\n  font-size: 1rem;\n  line-height: 1.75;\n  ${Border}\n  resize: none;\n`;\nconst CommentRegisterButton = styled.div`\n  display: flex;\n  justify-content: flex-end;\n`;\nconst CommentsWrap = styled.div`\n  margin: 1.5rem 0 3rem;\n`;\nconst CommentWriterWrap = styled.div`\n  margin-bottom: 1rem;\n`;\nconst CommentWriterInput = styled.input`\n  margin: 0;\n  padding: 2px 10px;\n  height: 38px;\n  font-size: 1rem;\n  color: #4c4c4c;\n  line-height: 1.2;\n  ${Border}\n\n  + input {\n    margin-left: 1rem;\n  }\n`;\nconst CommentWrap = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 1.5rem;\n  padding-bottom: 1.5rem;\n  border-bottom: 1px solid #efefef;\n`;\nconst CommentInfoWrap = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  margin-bottom: 1.5rem;\n`;\nconst CommentWriterName = styled.div`\n  font-weight: 600;\n  margin-bottom: 5px;\n`;\nconst CommentCreatedAt = styled.div`\n  font-size: 0.875rem;\n  color: #8a8a8a;\n`;\nconst Comment = styled.div`\n  font-size: 1.2rem;\n  line-height: 1.5;\n`;","map":{"version":3,"sources":["/Users/loel/Documents/loel-blog/pages/post/[id]/index.tsx"],"names":["React","useState","styled","DefaultLayout","useRouter","Head","Button","useQuery","useMutation","REMOVE_POST","CREATE_COMMENT","GET_COMMENTS","GET_ALL_POSTS","decodeHTMLForHeader","dateDisplay","css","service","Post","authority","post","router","isFallback","id","toString","comments","setComments","comment","setComment","name","password","contents","class","fetchPolicy","variables","postId","onCompleted","data","getComments","RemovePostMutation","refetchQueries","query","push","pushEditPage","remove","autoIncreaseHeight","event","target","style","height","scrollHeight","handleCommentInput","value","CreateCommentMutation","awaitRefetchQueries","update","store","createComment","newComments","registerComment","alert","user","JSON","parse","localStorage","getItem","email","title","html","updatedAt","__html","html2","length","map","item","createdAt","getStaticPaths","get","paths","params","fallback","getStaticProps","props","revalidate","Border","PostWrap","section","HeadWrap","div","Title","h1","InfoWrap","Author","span","CreatedAt","ContentWrap","article","EditWrap","CommentRegisterWrap","TotalComment","InputComment","textarea","CommentRegisterButton","CommentsWrap","CommentWriterWrap","CommentWriterInput","input","CommentWrap","CommentInfoWrap","CommentWriterName","CommentCreatedAt","Comment"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAOC,MAAP,MAAmB,eAAnB;AACA,SAASC,aAAT,QAA8B,SAA9B;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,IAAP,MAAiB,WAAjB;AAEA,OAAO,+BAAP;AACA,OAAO,0CAAP;AACA,SAASC,MAAT,QAAuB,QAAvB;AACA,SAASC,QAAT,EAAmBC,WAAnB,QAAsC,qBAAtC;AACA,SAASC,WAAT,EAAsBC,cAAtB,EAAsCC,YAAtC,EAAoDC,aAApD,QAAyE,WAAzE;AACA,OAAO,0BAAP;AACA,SAASC,mBAAT,EAA8BC,WAA9B,QAAiD,eAAjD;AACA,SAASC,GAAT,QAAoB,eAApB;AACA,OAAOC,OAAP,MAAoB,gBAApB;;AAOA,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA;AAAb,CAAD,KAA8B;AACzC,QAAMC,MAAM,GAAGhB,SAAS,EAAxB;;AAEA,MAAIgB,MAAM,CAACC,UAAX,EAAuB;AACrB,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,QAAMC,EAAE,GAAGH,IAAI,CAACG,EAAL,CAAQC,QAAR,EAAX;AAEA,QAAM;AAAA,OAACC,QAAD;AAAA,OAAWC;AAAX,MAA0BxB,QAAQ,CAAqB,IAArB,CAAxC;AACA,QAAM;AAAA,OAACyB,OAAD;AAAA,OAAUC;AAAV,MAAwB1B,QAAQ,CAAgB;AAAE2B,IAAAA,IAAI,EAAE,EAAR;AAAYC,IAAAA,QAAQ,EAAE,EAAtB;AAA0BC,IAAAA,QAAQ,EAAE,EAApC;AAAwCC,IAAAA,KAAK,EAAE;AAA/C,GAAhB,CAAtC;AAEAxB,EAAAA,QAAQ,CAACI,YAAD,EAAe;AACrBqB,IAAAA,WAAW,EAAE,aADQ;AAErBC,IAAAA,SAAS,EAAE;AAAEC,MAAAA,MAAM,EAAEZ;AAAV,KAFU;AAGrBa,IAAAA,WAAW,EAAGC,IAAD,IAAU;AACrBX,MAAAA,WAAW,CAACW,IAAI,CAACC,WAAN,CAAX;AACD;AALoB,GAAf,CAAR;AAQA,QAAM,CAACC,kBAAD,IAAuB9B,WAAW,CAACC,WAAD,EAAc;AACpD8B,IAAAA,cAAc,EAAE,CAAC;AAAEC,MAAAA,KAAK,EAAE5B;AAAT,KAAD,CADoC;AAEpDuB,IAAAA,WAAW,EAAE,MAAM;AACjBf,MAAAA,MAAM,CAACqB,IAAP,CAAa,GAAb;AACD;AAJmD,GAAd,CAAxC;;AAOA,QAAMC,YAAY,GAAG,MAAM;AACzBtB,IAAAA,MAAM,CAACqB,IAAP,CAAa,YAAWnB,EAAG,EAA3B;AACD,GAFD;;AAIA,QAAMqB,MAAM,GAAG,YAAY;AACzB,UAAML,kBAAkB,CAAC;AACvBL,MAAAA,SAAS,EAAE;AAAEX,QAAAA,EAAE,EAAEA;AAAN;AADY,KAAD,CAAxB;AAGD,GAJD;;AAMA,QAAMsB,kBAAkB,GAAIC,KAAD,IAAmD;AAC5E,UAAM;AAAEC,MAAAA;AAAF,QAAaD,KAAnB;AACAC,IAAAA,MAAM,CAACC,KAAP,CAAaC,MAAb,GAAuB,GAAEF,MAAM,CAACG,YAAP,GAAsB,CAAE,IAAjD;AACD,GAHD;;AAKA,QAAMC,kBAAkB,GAAIL,KAAD,IAAsE;AAC/F,UAAM;AAAEjB,MAAAA,IAAF;AAAQuB,MAAAA;AAAR,QAAkBN,KAAK,CAACC,MAA9B;AACAnB,IAAAA,UAAU,iCAAMD,OAAN;AAAe,OAACE,IAAD,GAAQuB;AAAvB,OAAV;AACD,GAHD;;AAKA,QAAM,CAACC,qBAAD,IAA0B5C,WAAW,CAACE,cAAD,EAAiB;AAC1D6B,IAAAA,cAAc,EAAE,CAAC;AAAEC,MAAAA,KAAK,EAAE7B,YAAT;AAAuBsB,MAAAA,SAAS,EAAE;AAAEC,QAAAA,MAAM,EAAEZ;AAAV;AAAlC,KAAD,CAD0C;AAE1D+B,IAAAA,mBAAmB,EAAE,IAFqC;AAG1DC,IAAAA,MAAM,EAAE,CAACC,KAAD,EAAQ;AAAEnB,MAAAA,IAAI,EAAE;AAAEoB,QAAAA;AAAF;AAAR,KAAR,KAAwC;AAC9C,YAAMC,WAAW,GAAGjC,QAAQ,GAAG,CAACgC,aAAD,EAAgB,GAAGhC,QAAnB,CAAH,GAAkC,IAA9D;AACAC,MAAAA,WAAW,CAACgC,WAAD,CAAX;AACD,KANyD;AAO1DtB,IAAAA,WAAW,EAAE,MAAM;AACjBR,MAAAA,UAAU,CAAC;AAAEC,QAAAA,IAAI,EAAE,EAAR;AAAYC,QAAAA,QAAQ,EAAE,EAAtB;AAA0BC,QAAAA,QAAQ,EAAE,EAApC;AAAwCC,QAAAA,KAAK,EAAE;AAA/C,OAAD,CAAV;AACD;AATyD,GAAjB,CAA3C;;AAYA,QAAM2B,eAAe,GAAG,YAAY;AAClC,UAAM;AAAE9B,MAAAA,IAAF;AAAQC,MAAAA,QAAR;AAAkBC,MAAAA;AAAlB,QAA+BJ,OAArC;;AACA,QAAI,CAACE,IAAL,EAAW;AACT+B,MAAAA,KAAK,CAAC,cAAD,CAAL;AACA;AACD;;AACD,QAAI,CAAC9B,QAAL,EAAe;AACb8B,MAAAA,KAAK,CAAC,eAAD,CAAL;AACA;AACD;;AACD,QAAI,CAAC7B,QAAL,EAAe;AACb6B,MAAAA,KAAK,CAAC,gBAAD,CAAL;AACA;AACD;;AAED,UAAMC,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,CAAb;AACA,UAAMZ,qBAAqB,CAAC;AAC1BnB,MAAAA,SAAS,EAAE;AAAEP,QAAAA,OAAF;AAAWQ,QAAAA,MAAM,EAAEZ,EAAnB;AAAuB2C,QAAAA,KAAK,EAAEL,IAAI,IAAIA,IAAI,CAACK,KAAb,GAAqBL,IAAI,CAACK,KAA1B,GAAkC;AAAhE;AADe,KAAD,CAA3B;AAGD,GAnBD;;AAqBA,sBACE;AAAA,4BACE,QAAC,IAAD;AAAA,8BACE;AAAM,QAAA,GAAG,EAAC,WAAV;AAAsB,QAAA,IAAI,EAAG,iCAAgC3C,EAAG;AAAhE;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAM,QAAA,IAAI,EAAC,OAAX;AAAmB,QAAA,OAAO,EAAG,eAAcH,IAAI,GAAI,KAAD,GAAQA,IAAI,CAAC+C,KAAhB,GAAwB,EAAG;AAA1E;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAM,QAAA,IAAI,EAAC,aAAX;AAAyB,QAAA,OAAO,EAAErD,mBAAmB,CAACM,IAAI,GAAGA,IAAI,CAACgD,IAAR,GAAe,4BAApB;AAArD;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE;AAAM,QAAA,QAAQ,EAAC,UAAf;AAA0B,QAAA,OAAO,EAAG,eAAchD,IAAI,GAAI,KAAD,GAAQA,IAAI,CAAC+C,KAAhB,GAAwB,EAAG;AAAjF;AAAA;AAAA;AAAA;AAAA,cAJF,eAKE;AAAM,QAAA,QAAQ,EAAC,SAAf;AAAyB,QAAA,OAAO,EAAC;AAAjC;AAAA;AAAA;AAAA;AAAA,cALF,eAME;AAAM,QAAA,QAAQ,EAAC,QAAf;AAAwB,QAAA,OAAO,EAAG,iCAAgC5C,EAAG;AAArE;AAAA;AAAA;AAAA;AAAA,cANF,eAOE;AAAM,QAAA,QAAQ,EAAC,gBAAf;AAAgC,QAAA,OAAO,EAAET,mBAAmB,CAACM,IAAI,GAAGA,IAAI,CAACgD,IAAR,GAAe,4BAApB;AAA5D;AAAA;AAAA;AAAA;AAAA,cAPF,eAQE;AAAM,QAAA,QAAQ,EAAC,UAAf;AAA0B,QAAA,OAAO,EAAC;AAAlC;AAAA;AAAA;AAAA;AAAA,cARF,eASE;AAAA,kBAAS,eAAchD,IAAI,GAAI,KAAD,GAAQA,IAAI,CAAC+C,KAAhB,GAAwB,EAAG;AAAtD;AAAA;AAAA;AAAA;AAAA,cATF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAYG/C,IAAI,iBACH;AAAA,8BACE,QAAC,QAAD;AAAA,gCACE,QAAC,QAAD;AAAA,kCACE,QAAC,KAAD;AAAA,sBAAQA,IAAI,CAAC+C;AAAb;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,QAAD;AAAA,oCACE,QAAC,MAAD;AAAA,wBAAS/C,IAAI,CAAC8C;AAAd;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE,QAAC,SAAD;AAAA,wBAAYnD,WAAW,CAACK,IAAI,CAACiD,SAAN;AAAvB;AAAA;AAAA;AAAA;AAAA,oBAFF,EAGGlD,SAAS,iBACR,QAAC,QAAD;AAAA,sCACE,QAAC,MAAD;AAAQ,gBAAA,OAAO,EAAEwB,YAAjB;AAA+B,gBAAA,OAAO,EAAE,SAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAIE,QAAC,MAAD;AAAQ,gBAAA,OAAO,EAAEC,MAAjB;AAAyB,gBAAA,OAAO,EAAE,QAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAkBE,QAAC,WAAD;AAAa,UAAA,SAAS,EAAE,qBAAxB;AAA+C,UAAA,uBAAuB,EAAE;AAAE0B,YAAAA,MAAM,EAAElD,IAAI,CAACmD,KAAL,GAAcnD,IAAI,CAACmD,KAAnB,GAAuCnD,IAAI,CAACgD;AAAtD;AAAxE;AAAA;AAAA;AAAA;AAAA,gBAlBF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAqBE,QAAC,mBAAD;AAAA,gCACE,QAAC,YAAD;AAAA,sCAAkB3C,QAAQ,GAAGA,QAAQ,CAAC+C,MAAZ,GAAqB,CAA/C;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA,kCACE,QAAC,iBAAD;AAAA,oCACE,QAAC,kBAAD;AAAoB,cAAA,IAAI,EAAE,MAA1B;AAAkC,cAAA,SAAS,EAAE,EAA7C;AAAiD,cAAA,KAAK,EAAE7C,OAAO,CAACE,IAAhE;AAAsE,cAAA,QAAQ,EAAEsB,kBAAhF;AAAoG,cAAA,WAAW,EAAE;AAAjH;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE,QAAC,kBAAD;AAAoB,cAAA,IAAI,EAAE,UAA1B;AAAsC,cAAA,SAAS,EAAE,EAAjD;AAAqD,cAAA,KAAK,EAAExB,OAAO,CAACG,QAApE;AAA8E,cAAA,QAAQ,EAAEqB,kBAAxF;AAA4G,cAAA,WAAW,EAAE;AAAzH;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAKE,QAAC,YAAD;AAAc,YAAA,IAAI,EAAE,UAApB;AAAgC,YAAA,KAAK,EAAExB,OAAO,CAACI,QAA/C;AAAyD,YAAA,QAAQ,EAAEoB,kBAAnE;AAAuF,YAAA,OAAO,EAAEN,kBAAhG;AAAoH,YAAA,WAAW,EAAE;AAAjI;AAAA;AAAA;AAAA;AAAA,kBALF,eAME,QAAC,qBAAD;AAAA,mCACE,QAAC,MAAD;AAAQ,cAAA,OAAO,EAAE,SAAjB;AAA4B,cAAA,KAAK,EAAE,GAAnC;AAAwC,cAAA,MAAM,EAAE,EAAhD;AAAoD,cAAA,OAAO,EAAEc,eAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBANF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cArBF,eAoCE,QAAC,YAAD;AAAA,kBACGlC,QAAQ,IACPA,QAAQ,CAAC+C,MAAT,GAAkB,CADnB,IAEC/C,QAAQ,CAACgD,GAAT,CAAcC,IAAD,IAAU;AACrB,8BACE,QAAC,WAAD;AAAA,oCACE,QAAC,eAAD;AAAA,sCACE,QAAC,iBAAD;AAAA,0BAAoBA,IAAI,CAAC7C;AAAzB;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE,QAAC,gBAAD;AAAA,0BAAmBd,WAAW,CAAC2D,IAAI,CAACC,SAAN;AAA9B;AAAA;AAAA;AAAA;AAAA,sBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAKE,QAAC,OAAD;AAAA,wBAAUD,IAAI,CAAC3C;AAAf;AAAA;AAAA;AAAA;AAAA,oBALF;AAAA,aAAkB2C,IAAI,CAACnD,EAAvB;AAAA;AAAA;AAAA;AAAA,kBADF;AASD,SAVD;AAHJ;AAAA;AAAA;AAAA;AAAA,cApCF;AAAA,oBAbJ;AAAA,kBADF;AAqED,CArJD;;AAuJA,eAAenB,aAAa,CAACc,IAAD,CAA5B;AAEA,OAAO,eAAe0D,cAAf,GAAgC;AACrC,QAAM;AAAEvC,IAAAA;AAAF,MAAW,MAAMpB,OAAO,CAAC4D,GAAR,CAAY,OAAZ,CAAvB;AACA,QAAMC,KAAK,GAAGzC,IAAI,CAACoC,GAAL,CAAUC,IAAD,KAAgB;AACrCK,IAAAA,MAAM,EAAE;AAAExD,MAAAA,EAAE,EAAEmD,IAAI,CAACnD,EAAL,CAAQC,QAAR;AAAN;AAD6B,GAAhB,CAAT,CAAd;AAIA,SAAO;AACLsD,IAAAA,KADK;AAELE,IAAAA,QAAQ,EAAE;AAFL,GAAP;AAID;AAED,OAAO,eAAeC,cAAf,CAA8B;AAAEF,EAAAA;AAAF,CAA9B,EAA+C;AACpD,QAAM;AAAE1C,IAAAA;AAAF,MAAW,MAAMpB,OAAO,CAAC4D,GAAR,CAAa,SAAQE,MAAM,CAACxD,EAAG,EAA/B,CAAvB;AAEA,SAAO;AAAE2D,IAAAA,KAAK,EAAE;AAAE9D,MAAAA,IAAI,EAAEiB;AAAR,KAAT;AAAyB8C,IAAAA,UAAU,EAAE;AAArC,GAAP;AACD;AAED,MAAMC,MAAM,GAAGpE,GAAI;AACnB;AACA;AACA,CAHA;AAKA,MAAMqE,QAAQ,GAAGlF,MAAM,CAACmF,OAAQ;AAChC;AACA;AACA;AACA;AACA,CALA;AAOA,MAAMC,QAAQ,GAAGpF,MAAM,CAACqF,GAAI;AAC5B;AACA;AACA;AACA;AACA;AACA,CANA;AAQA,MAAMC,KAAK,GAAGtF,MAAM,CAACuF,EAAG;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,CAPA;AASA,MAAMC,QAAQ,GAAGxF,MAAM,CAACqF,GAAI;AAC5B;AACA;AACA,CAHA;AAKA,MAAMI,MAAM,GAAGzF,MAAM,CAAC0F,IAAK;AAC3B;AACA;AACA,CAHA;AAKA,MAAMC,SAAS,GAAG3F,MAAM,CAAC0F,IAAK,EAA9B;AAEA,MAAME,WAAW,GAAG5F,MAAM,CAAC6F,OAAQ;AACnC;AACA;AACA;AACA;AACA;AACA;AACA,CAPA;AASA,MAAMC,QAAQ,GAAG9F,MAAM,CAACqF,GAAI;AAC5B;AACA;AACA;AACA;AACA;AACA,CANA;AAQA,MAAMU,mBAAmB,GAAG/F,MAAM,CAACqF,GAAI;AACvC;AACA,CAFA;AAIA,MAAMW,YAAY,GAAGhG,MAAM,CAACqF,GAAI;AAChC;AACA;AACA,CAHA;AAKA,MAAMY,YAAY,GAAGjG,MAAM,CAACkG,QAAS;AACrC;AACA;AACA;AACA;AACA;AACA;AACA,IAAIjB,MAAO;AACX;AACA,CATA;AAWA,MAAMkB,qBAAqB,GAAGnG,MAAM,CAACqF,GAAI;AACzC;AACA;AACA,CAHA;AAKA,MAAMe,YAAY,GAAGpG,MAAM,CAACqF,GAAI;AAChC;AACA,CAFA;AAIA,MAAMgB,iBAAiB,GAAGrG,MAAM,CAACqF,GAAI;AACrC;AACA,CAFA;AAIA,MAAMiB,kBAAkB,GAAGtG,MAAM,CAACuG,KAAM;AACxC;AACA;AACA;AACA;AACA;AACA;AACA,IAAItB,MAAO;AACX;AACA;AACA;AACA;AACA,CAZA;AAcA,MAAMuB,WAAW,GAAGxG,MAAM,CAACqF,GAAI;AAC/B;AACA;AACA;AACA;AACA;AACA,CANA;AAQA,MAAMoB,eAAe,GAAGzG,MAAM,CAACqF,GAAI;AACnC;AACA;AACA;AACA;AACA,CALA;AAOA,MAAMqB,iBAAiB,GAAG1G,MAAM,CAACqF,GAAI;AACrC;AACA;AACA,CAHA;AAKA,MAAMsB,gBAAgB,GAAG3G,MAAM,CAACqF,GAAI;AACpC;AACA;AACA,CAHA;AAKA,MAAMuB,OAAO,GAAG5G,MAAM,CAACqF,GAAI;AAC3B;AACA;AACA,CAHA","sourcesContent":["import React, { useState } from \"react\";\nimport { GetServerSidePropsContext } from \"next\";\nimport styled from \"styles/styled\";\nimport { DefaultLayout } from \"layouts\";\nimport { useRouter } from \"next/router\";\nimport Head from \"next/head\";\n\nimport \"codemirror/lib/codemirror.css\";\nimport \"@toast-ui/editor/dist/toastui-editor.css\";\nimport { Button } from \"styles\";\nimport { useQuery, useMutation } from \"@apollo/react-hooks\";\nimport { REMOVE_POST, CREATE_COMMENT, GET_COMMENTS, GET_ALL_POSTS } from \"@api/Post\";\nimport \"prismjs/themes/prism.css\";\nimport { decodeHTMLForHeader, dateDisplay } from \"@utils/common\";\nimport { css } from \"@emotion/core\";\nimport service from \"@utils/service\";\n\ninterface Props extends GetServerSidePropsContext {\n  authority: boolean;\n  authenticated: (state: boolean) => void;\n}\n\nconst Post = ({ authority, post }: any) => {\n  const router = useRouter();\n\n  if (router.isFallback) {\n    return <div>Loading...</div>;\n  }\n\n  const id = post.id.toString();\n\n  const [comments, setComments] = useState<IComments[] | null>(null);\n  const [comment, setComment] = useState<IWriteComment>({ name: \"\", password: \"\", contents: \"\", class: 0 });\n\n  useQuery(GET_COMMENTS, {\n    fetchPolicy: \"cache-first\",\n    variables: { postId: id },\n    onCompleted: (data) => {\n      setComments(data.getComments);\n    },\n  });\n\n  const [RemovePostMutation] = useMutation(REMOVE_POST, {\n    refetchQueries: [{ query: GET_ALL_POSTS }],\n    onCompleted: () => {\n      router.push(`/`);\n    },\n  });\n\n  const pushEditPage = () => {\n    router.push(`/edit?id=${id}`);\n  };\n\n  const remove = async () => {\n    await RemovePostMutation({\n      variables: { id: id },\n    });\n  };\n\n  const autoIncreaseHeight = (event: React.ChangeEvent<HTMLTextAreaElement>) => {\n    const { target } = event;\n    target.style.height = `${target.scrollHeight + 2}px`;\n  };\n\n  const handleCommentInput = (event: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>) => {\n    const { name, value } = event.target;\n    setComment({ ...comment, [name]: value });\n  };\n\n  const [CreateCommentMutation] = useMutation(CREATE_COMMENT, {\n    refetchQueries: [{ query: GET_COMMENTS, variables: { postId: id } }],\n    awaitRefetchQueries: true,\n    update: (store, { data: { createComment } }) => {\n      const newComments = comments ? [createComment, ...comments] : null;\n      setComments(newComments);\n    },\n    onCompleted: () => {\n      setComment({ name: \"\", password: \"\", contents: \"\", class: 0 });\n    },\n  });\n\n  const registerComment = async () => {\n    const { name, password, contents } = comment;\n    if (!name) {\n      alert(\"닉네임을 입력해주세요.\");\n      return;\n    }\n    if (!password) {\n      alert(\"비밀번호를 입력해주세요.\");\n      return;\n    }\n    if (!contents) {\n      alert(\"댓글 내용을 입력해주세요.\");\n      return;\n    }\n\n    const user = JSON.parse(localStorage.getItem(\"user\") as string);\n    await CreateCommentMutation({\n      variables: { comment, postId: id, email: user && user.email ? user.email : \"\" },\n    });\n  };\n\n  return (\n    <>\n      <Head>\n        <link rel=\"canonical\" href={`https://www.loelblog.com/post/${id}`} />\n        <meta name=\"title\" content={`Loel's Blog ${post ? ` - ` + post.title : \"\"}`} />\n        <meta name=\"description\" content={decodeHTMLForHeader(post ? post.html : \"음식과 여행을 좋아하는 개발자의 블로그 입니다.\")} />\n        <meta property=\"og:title\" content={`Loel's Blog ${post ? ` - ` + post.title : \"\"}`} />\n        <meta property=\"og:type\" content=\"article\" />\n        <meta property=\"og:url\" content={`https://www.loelblog.com/post/${id}`} />\n        <meta property=\"og:description\" content={decodeHTMLForHeader(post ? post.html : \"음식과 여행을 좋아하는 개발자의 블로그 입니다.\")} />\n        <meta property=\"og:image\" content=\"https://images.loelblog.com/thumb/background.jpg\" />\n        <title>{`Loel's Blog ${post ? ` - ` + post.title : \"\"}`}</title>\n      </Head>\n      {post && (\n        <>\n          <PostWrap>\n            <HeadWrap>\n              <Title>{post.title}</Title>\n              <InfoWrap>\n                <Author>{post.email}</Author>\n                <CreatedAt>{dateDisplay(post.updatedAt)}</CreatedAt>\n                {authority && (\n                  <EditWrap>\n                    <Button onClick={pushEditPage} variant={\"warning\"}>\n                      수정\n                    </Button>\n                    <Button onClick={remove} variant={\"danger\"}>\n                      삭제\n                    </Button>\n                  </EditWrap>\n                )}\n              </InfoWrap>\n            </HeadWrap>\n            <ContentWrap className={\"tui-editor-contents\"} dangerouslySetInnerHTML={{ __html: post.html2 ? (post.html2 as string) : (post.html as string) }} />\n          </PostWrap>\n          <CommentRegisterWrap>\n            <TotalComment>댓글 {comments ? comments.length : 0}</TotalComment>\n            <div>\n              <CommentWriterWrap>\n                <CommentWriterInput name={\"name\"} maxLength={40} value={comment.name} onChange={handleCommentInput} placeholder={\"닉네임\"} />\n                <CommentWriterInput name={\"password\"} maxLength={40} value={comment.password} onChange={handleCommentInput} placeholder={\"비밀번호\"} />\n              </CommentWriterWrap>\n              <InputComment name={\"contents\"} value={comment.contents} onChange={handleCommentInput} onInput={autoIncreaseHeight} placeholder={\"댓글을 남겨주세요.\"} />\n              <CommentRegisterButton>\n                <Button variant={\"success\"} width={120} height={40} onClick={registerComment}>\n                  댓글 작성\n                </Button>\n              </CommentRegisterButton>\n            </div>\n          </CommentRegisterWrap>\n          <CommentsWrap>\n            {comments &&\n              comments.length > 0 &&\n              comments.map((item) => {\n                return (\n                  <CommentWrap key={item.id}>\n                    <CommentInfoWrap>\n                      <CommentWriterName>{item.name}</CommentWriterName>\n                      <CommentCreatedAt>{dateDisplay(item.createdAt)}</CommentCreatedAt>\n                    </CommentInfoWrap>\n                    <Comment>{item.contents}</Comment>\n                  </CommentWrap>\n                );\n              })}\n          </CommentsWrap>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default DefaultLayout(Post);\n\nexport async function getStaticPaths() {\n  const { data } = await service.get(\"/post\");\n  const paths = data.map((item: any) => ({\n    params: { id: item.id.toString() },\n  }));\n\n  return {\n    paths,\n    fallback: true,\n  };\n}\n\nexport async function getStaticProps({ params }: any) {\n  const { data } = await service.get(`/post/${params.id}`);\n\n  return { props: { post: data }, revalidate: 1 };\n}\n\nconst Border = css`\n  border: 1px solid #e4e4e4;\n  border-radius: 4px;\n`;\n\nconst PostWrap = styled.section`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  padding: 2rem 0;\n`;\n\nconst HeadWrap = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 1rem;\n  padding-bottom: 2rem;\n  border-bottom: 1px solid #eee;\n`;\n\nconst Title = styled.h1`\n  font-size: 2.5rem;\n  line-height: 1.5;\n  font-weight: 800;\n  color: #313131;\n  word-break: keep-all;\n  margin-bottom: 2rem;\n`;\n\nconst InfoWrap = styled.div`\n  display: flex;\n  font-size: 1rem;\n`;\n\nconst Author = styled.span`\n  margin-right: 10px;\n  font-weight: 600;\n`;\n\nconst CreatedAt = styled.span``;\n\nconst ContentWrap = styled.article`\n  font-size: 1rem;\n\n  img {\n    display: block;\n    max-width: 768px;\n  }\n`;\n\nconst EditWrap = styled.div`\n  margin-left: auto;\n\n  button + button {\n    margin-left: 0.5rem;\n  }\n`;\n\nconst CommentRegisterWrap = styled.div`\n  padding-bottom: 2rem;\n`;\n\nconst TotalComment = styled.div`\n  margin: 0.5rem 0.5rem 1rem;\n  font-weight: 500;\n`;\n\nconst InputComment = styled.textarea`\n  margin-bottom: 1rem;\n  padding: 0.625rem;\n  width: 100%;\n  min-height: 5rem;\n  font-size: 1rem;\n  line-height: 1.75;\n  ${Border}\n  resize: none;\n`;\n\nconst CommentRegisterButton = styled.div`\n  display: flex;\n  justify-content: flex-end;\n`;\n\nconst CommentsWrap = styled.div`\n  margin: 1.5rem 0 3rem;\n`;\n\nconst CommentWriterWrap = styled.div`\n  margin-bottom: 1rem;\n`;\n\nconst CommentWriterInput = styled.input`\n  margin: 0;\n  padding: 2px 10px;\n  height: 38px;\n  font-size: 1rem;\n  color: #4c4c4c;\n  line-height: 1.2;\n  ${Border}\n\n  + input {\n    margin-left: 1rem;\n  }\n`;\n\nconst CommentWrap = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 1.5rem;\n  padding-bottom: 1.5rem;\n  border-bottom: 1px solid #efefef;\n`;\n\nconst CommentInfoWrap = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  margin-bottom: 1.5rem;\n`;\n\nconst CommentWriterName = styled.div`\n  font-weight: 600;\n  margin-bottom: 5px;\n`;\n\nconst CommentCreatedAt = styled.div`\n  font-size: 0.875rem;\n  color: #8a8a8a;\n`;\n\nconst Comment = styled.div`\n  font-size: 1.2rem;\n  line-height: 1.5;\n`;\n"]},"metadata":{},"sourceType":"module"}
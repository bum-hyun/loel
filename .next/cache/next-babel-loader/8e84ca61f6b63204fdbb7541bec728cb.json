{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/loel/Documents/loel-blog/pages/edit/index.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport dynamic from \"next/dynamic\";\nimport React, { useEffect, useState } from \"react\";\nimport service from \"../../utils/service\";\nimport Select from \"react-select\";\nimport { EmptyLayout } from \"layouts\";\nimport { Button } from \"styles\";\nimport \"codemirror/lib/codemirror.css\";\nimport \"@toast-ui/editor/dist/toastui-editor.css\";\nimport \"tui-color-picker/dist/tui-color-picker.css\";\nimport \"highlight.js/styles/railscasts.css\";\nimport styled from \"styles/styled\";\nimport { useRouter } from \"next/router\";\nimport { useMutation, useQuery } from \"@apollo/react-hooks\";\nimport { CREATE_POST, MODIFY_POST, GET_POST } from \"@api/Post\";\nimport { GET_CATEGORIES } from \"@api/Category\";\nconst Editor = dynamic(() => import(\"components/TuiEditorWrapper\"), {\n  ssr: false,\n  loadableGenerated: {\n    webpack: () => [require.resolveWeak(\"components/TuiEditorWrapper\")],\n    modules: [\"components/TuiEditorWrapper\"]\n  }\n});\nconst EditorWithForwardedRef = /*#__PURE__*/React.forwardRef((props, ref) => /*#__PURE__*/_jsxDEV(Editor, _objectSpread(_objectSpread({}, props), {}, {\n  forwardedRef: ref\n}), void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 26,\n  columnNumber: 3\n}, this));\n\nconst WysiwygEditor = () => {\n  const router = useRouter();\n  const {\n    id\n  } = router.query;\n  const {\n    0: post,\n    1: setPost\n  } = useState({\n    title: \"\",\n    category: \"\",\n    html: \"\",\n    html2: \"\",\n    email: \"ru_bryunak@naver.com\",\n    markdown: \"\"\n  });\n  const {\n    0: image,\n    1: setImage\n  } = useState([]);\n  const {\n    0: options,\n    1: setOptions\n  } = useState([]);\n  const editorRef = React.useRef();\n  const imageUploadRef = React.useRef(null);\n  useQuery(GET_CATEGORIES, {\n    fetchPolicy: \"cache-first\",\n    onCompleted: data => {\n      const dummy = data.getCategories.reduce((acc, cur) => {\n        acc.push({\n          value: cur.category.toLowerCase(),\n          label: cur.category\n        });\n        return acc;\n      }, []);\n      setOptions(dummy);\n    }\n  });\n  useQuery(GET_POST, {\n    fetchPolicy: \"network-only\",\n    variables: {\n      id\n    },\n    skip: !id,\n    onCompleted: data => {\n      const post = data.getPost;\n      setPost({\n        email: post.user.email,\n        category: post.category,\n        title: post.title,\n        html: post.html,\n        markdown: post.markdown,\n        image: post.image,\n        html2: post.html2\n      });\n    }\n  });\n\n  const handleChange = () => {\n    if (!editorRef.current) {\n      return;\n    }\n\n    const instance = editorRef.current.getInstance();\n    const html2 = document.querySelector(\".tui-editor-contents\").innerHTML;\n    setPost(_objectSpread(_objectSpread({}, post), {}, {\n      html: instance.getHtml(),\n      html2,\n      markdown: instance.getMarkdown()\n    }));\n  };\n\n  const handleSelect = newValue => {\n    if (newValue) {\n      setPost(_objectSpread(_objectSpread({}, post), {}, {\n        category: newValue.value\n      }));\n    } else {\n      setPost(_objectSpread(_objectSpread({}, post), {}, {\n        category: null\n      }));\n    }\n  };\n\n  const handleTitle = event => {\n    const {\n      value\n    } = event.target;\n    setPost(_objectSpread(_objectSpread({}, post), {}, {\n      title: value\n    }));\n  };\n\n  const [EditPostMutation] = useMutation(id ? MODIFY_POST : CREATE_POST, {\n    onCompleted: () => {\n      router.push(`/${post.category}`);\n    }\n  });\n\n  const Submit = async () => {\n    await EditPostMutation({\n      variables: id ? {\n        id,\n        input: post\n      } : {\n        input: post\n      }\n    });\n  };\n\n  const addImageBlobHook = async (blob, callback) => {\n    const formData = new FormData();\n    formData.append(\"img\", blob);\n    const {\n      data\n    } = await service.post(\"/upload\", formData);\n    callback(data.contents, \"image\");\n    const elements = document.querySelectorAll(\".tui-editor-contents img\");\n    const images = [];\n    elements.forEach(image => images.push(image.src));\n    setImage(images);\n  };\n\n  const clickUploadInput = () => {\n    if (!imageUploadRef.current) return;\n    imageUploadRef.current.click();\n  };\n\n  const uploadFile = async event => {\n    const files = event.target.files;\n    const formData = new FormData();\n\n    if (files && files.length > 0) {\n      Array.from(files).forEach(item => {\n        formData.append(\"images\", item);\n      });\n    }\n\n    const {\n      data\n    } = await service.post(\"/upload\", formData);\n    const instance = editorRef.current.getInstance();\n    data.forEach(item => {\n      instance.insertText(`![image](${item.contents})`);\n    });\n    const elements = document.querySelectorAll(\".tui-editor-contents img\");\n    const images = [];\n    elements.forEach(image => images.push(image.src));\n    setImage(images);\n  };\n\n  useEffect(() => {\n    setPost(_objectSpread(_objectSpread({}, post), {}, {\n      image\n    }));\n  }, [image]);\n  return /*#__PURE__*/_jsxDEV(Wrap, {\n    children: [/*#__PURE__*/_jsxDEV(RowWrap, {\n      children: [/*#__PURE__*/_jsxDEV(SelectWrap, {\n        instanceId: \"select\",\n        value: options.filter(item => item.value === post.category),\n        onChange: handleSelect,\n        options: options,\n        isClearable: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: clickUploadInput,\n        children: [\"\\uC774\\uBBF8\\uC9C0 \\uC5C5\\uB85C\\uB4DC\", /*#__PURE__*/_jsxDEV(\"input\", {\n          ref: imageUploadRef,\n          type: \"file\",\n          multiple: true,\n          onChange: uploadFile,\n          style: {\n            display: \"none\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ButtonWrap, {\n        variant: id ? \"warning\" : \"success\",\n        height: 38,\n        onClick: Submit,\n        children: id ? \"수정\" : \"등록\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(RowWrap, {\n      children: /*#__PURE__*/_jsxDEV(TitleInput, {\n        onChange: handleTitle,\n        value: post.title,\n        placeholder: \"제목을 입력해주세요.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(EditorWithForwardedRef, {\n      initialValue: post.markdown,\n      previewStyle: \"vertical\",\n      height: \"600px\",\n      initialEditType: \"markdown\",\n      useCommandShortcut: true,\n      ref: editorRef,\n      previewHighlight: false,\n      onChange: handleChange,\n      hooks: {\n        addImageBlobHook\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 136,\n    columnNumber: 5\n  }, this);\n};\n\nexport default EmptyLayout(WysiwygEditor);\nconst Wrap = styled.div`\n  width: 100%;\n`;\nconst RowWrap = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 1rem;\n`;\nconst SelectWrap = styled(Select)`\n  margin-right: 1rem;\n  width: 300px;\n  font-size: 0.875rem;\n  z-index: 3;\n\n  > div {\n    border-color: #e5e5e5;\n  }\n`;\nconst ButtonWrap = styled(Button)`\n  margin-left: auto;\n`;\nconst TitleInput = styled.input`\n  margin: 0;\n  padding: 0 0.5rem;\n  width: 100%;\n  height: 2.5rem;\n  font-size: 0.875rem;\n  font-weight: 400;\n  border: 1px solid #e5e5e5;\n  border-radius: 4px;\n\n  :hover,\n  :focus {\n    border-color: hsl(0, 0%, 70%);\n  }\n`;","map":{"version":3,"sources":["/Users/loel/Documents/loel-blog/pages/edit/index.tsx"],"names":["dynamic","React","useEffect","useState","service","Select","EmptyLayout","Button","styled","useRouter","useMutation","useQuery","CREATE_POST","MODIFY_POST","GET_POST","GET_CATEGORIES","Editor","ssr","EditorWithForwardedRef","forwardRef","props","ref","WysiwygEditor","router","id","query","post","setPost","title","category","html","html2","email","markdown","image","setImage","options","setOptions","editorRef","useRef","imageUploadRef","fetchPolicy","onCompleted","data","dummy","getCategories","reduce","acc","cur","push","value","toLowerCase","label","variables","skip","getPost","user","handleChange","current","instance","getInstance","document","querySelector","innerHTML","getHtml","getMarkdown","handleSelect","newValue","handleTitle","event","target","EditPostMutation","Submit","input","addImageBlobHook","blob","callback","formData","FormData","append","contents","elements","querySelectorAll","images","forEach","src","clickUploadInput","click","uploadFile","files","length","Array","from","item","insertText","filter","display","Wrap","div","RowWrap","SelectWrap","ButtonWrap","TitleInput"],"mappings":"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","sourcesContent":["import dynamic from \"next/dynamic\";\nimport React, { useEffect, useState } from \"react\";\nimport service from \"../../utils/service\";\nimport Select, { ValueType, OptionTypeBase } from \"react-select\";\nimport { EmptyLayout } from \"layouts\";\nimport { Button } from \"styles\";\nimport { Editor as EditorType, EditorProps } from \"@toast-ui/react-editor\";\nimport { TuiEditorWithForwardedProps } from \"components/TuiEditorWrapper\";\n\nimport \"codemirror/lib/codemirror.css\";\nimport \"@toast-ui/editor/dist/toastui-editor.css\";\nimport \"tui-color-picker/dist/tui-color-picker.css\";\nimport \"highlight.js/styles/railscasts.css\";\nimport styled from \"styles/styled\";\nimport { useRouter } from \"next/router\";\nimport { useMutation, useQuery } from \"@apollo/react-hooks\";\nimport { CREATE_POST, MODIFY_POST, GET_POST } from \"@api/Post\";\nimport { GET_CATEGORIES } from \"@api/Category\";\n\ninterface EditorPropsWithHandlers extends EditorProps {\n  onChange?(value: string): void;\n}\n\nconst Editor = dynamic<TuiEditorWithForwardedProps>(() => import(\"components/TuiEditorWrapper\"), { ssr: false });\nconst EditorWithForwardedRef = React.forwardRef<EditorType | undefined, EditorPropsWithHandlers>((props, ref) => (\n  <Editor {...props} forwardedRef={ref as React.MutableRefObject<EditorType>} />\n));\n\nconst WysiwygEditor = () => {\n  const router = useRouter();\n  const { id } = router.query;\n\n  const [post, setPost] = useState<IPost>({ title: \"\", category: \"\", html: \"\", html2: \"\", email: \"ru_bryunak@naver.com\", markdown: \"\" });\n  const [image, setImage] = useState<string[]>([]);\n  const [options, setOptions] = useState<OptionTypeBase[]>([]);\n  const editorRef = React.useRef<EditorType>();\n  const imageUploadRef = React.useRef<HTMLInputElement | null>(null);\n\n  useQuery(GET_CATEGORIES, {\n    fetchPolicy: \"cache-first\",\n    onCompleted: (data) => {\n      const dummy = data.getCategories.reduce((acc: OptionTypeBase[], cur: ICategoryWithChildren) => {\n        acc.push({ value: cur.category.toLowerCase(), label: cur.category });\n        return acc;\n      }, []);\n      setOptions(dummy);\n    },\n  });\n\n  useQuery(GET_POST, {\n    fetchPolicy: \"network-only\",\n    variables: { id },\n    skip: !id,\n    onCompleted: (data) => {\n      const post = data.getPost;\n      setPost({ email: post.user.email, category: post.category, title: post.title, html: post.html, markdown: post.markdown, image: post.image, html2: post.html2 });\n    },\n  });\n\n  const handleChange = () => {\n    if (!editorRef.current) {\n      return;\n    }\n\n    const instance = editorRef.current.getInstance();\n    const html2 = document.querySelector(\".tui-editor-contents\")!.innerHTML;\n\n    setPost({ ...post, html: instance.getHtml(), html2, markdown: instance.getMarkdown() });\n  };\n\n  const handleSelect = (newValue: ValueType<OptionTypeBase, false>) => {\n    if (newValue) {\n      setPost({ ...post, category: newValue.value });\n    } else {\n      setPost({ ...post, category: null });\n    }\n  };\n\n  const handleTitle = (event: React.ChangeEvent<{ value: string }>) => {\n    const { value } = event.target;\n    setPost({ ...post, title: value });\n  };\n\n  const [EditPostMutation] = useMutation(id ? MODIFY_POST : CREATE_POST, {\n    onCompleted: () => {\n      router.push(`/${post.category}`);\n    },\n  });\n\n  const Submit = async () => {\n    await EditPostMutation({\n      variables: id ? { id, input: post } : { input: post },\n    });\n  };\n\n  const addImageBlobHook = async (blob: File | Blob, callback: (url: string, altText: string) => void) => {\n    const formData = new FormData();\n    formData.append(\"img\", blob);\n    const { data } = await service.post(\"/upload\", formData);\n    callback(data.contents, \"image\");\n    const elements = document.querySelectorAll(\".tui-editor-contents img\") as NodeListOf<HTMLImageElement>;\n    const images: string[] = [];\n    elements.forEach((image) => images.push(image.src));\n    setImage(images);\n  };\n\n  const clickUploadInput = () => {\n    if (!imageUploadRef.current) return;\n    imageUploadRef.current!.click();\n  };\n\n  const uploadFile = async (event: React.ChangeEvent<HTMLInputElement>) => {\n    const files = event.target.files;\n    const formData = new FormData();\n    if (files && files.length > 0) {\n      Array.from(files).forEach((item) => {\n        formData.append(\"images\", item);\n      });\n    }\n    const { data } = await service.post(\"/upload\", formData);\n    const instance = editorRef.current!.getInstance();\n    data.forEach((item: any) => {\n      instance.insertText(`![image](${item.contents})`);\n    });\n    const elements = document.querySelectorAll(\".tui-editor-contents img\") as NodeListOf<HTMLImageElement>;\n    const images: string[] = [];\n    elements.forEach((image) => images.push(image.src));\n    setImage(images);\n  };\n\n  useEffect(() => {\n    setPost({ ...post, image });\n  }, [image]);\n\n  return (\n    <Wrap>\n      <RowWrap>\n        <SelectWrap instanceId={\"select\"} value={options.filter((item) => item.value === post.category)} onChange={handleSelect} options={options} isClearable={true} />\n        <Button onClick={clickUploadInput}>\n          이미지 업로드\n          <input ref={imageUploadRef} type={\"file\"} multiple={true} onChange={uploadFile} style={{ display: \"none\" }} />\n        </Button>\n        <ButtonWrap variant={id ? \"warning\" : \"success\"} height={38} onClick={Submit}>\n          {id ? \"수정\" : \"등록\"}\n        </ButtonWrap>\n      </RowWrap>\n      <RowWrap>\n        <TitleInput onChange={handleTitle} value={post.title} placeholder={\"제목을 입력해주세요.\"} />\n      </RowWrap>\n      <EditorWithForwardedRef\n        initialValue={post.markdown}\n        previewStyle={\"vertical\"}\n        height={\"600px\"}\n        initialEditType={\"markdown\"}\n        useCommandShortcut={true}\n        ref={editorRef}\n        previewHighlight={false}\n        onChange={handleChange}\n        hooks={{ addImageBlobHook }}\n      />\n    </Wrap>\n  );\n};\n\nexport default EmptyLayout(WysiwygEditor);\n\nconst Wrap = styled.div`\n  width: 100%;\n`;\n\nconst RowWrap = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 1rem;\n`;\n\nconst SelectWrap = styled(Select)`\n  margin-right: 1rem;\n  width: 300px;\n  font-size: 0.875rem;\n  z-index: 3;\n\n  > div {\n    border-color: #e5e5e5;\n  }\n`;\n\nconst ButtonWrap = styled(Button)`\n  margin-left: auto;\n`;\n\nconst TitleInput = styled.input`\n  margin: 0;\n  padding: 0 0.5rem;\n  width: 100%;\n  height: 2.5rem;\n  font-size: 0.875rem;\n  font-weight: 400;\n  border: 1px solid #e5e5e5;\n  border-radius: 4px;\n\n  :hover,\n  :focus {\n    border-color: hsl(0, 0%, 70%);\n  }\n`;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/loel/Documents/loel-blog/src/components/TuiEditorWrapper.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from \"react\";\nimport ToastEditor from \"@toast-ui/editor\";\nimport { Editor } from \"@toast-ui/react-editor\";\nimport colorSyntaxPlugin from \"@toast-ui/editor-plugin-color-syntax\";\nimport Prism from \"prismjs\";\nimport \"prismjs/themes/prism.css\";\n\nconst TuiEditorWrapper = props => {\n  const prism = () => {\n    function registerRequire(language) {\n      const requires = languages[language].require;\n\n      if (requires) {\n        if (typeof requires === \"string\") {\n          registerRequire(requires);\n        } else {\n          requires.forEach(item => registerRequire(item));\n        }\n\n        registerLanguage(language);\n      } else {\n        registerLanguage(language);\n      }\n    }\n\n    function registerLanguage(language) {\n      require(`prismjs/components/prism-${language}.min.js`);\n\n      ToastEditor.codeBlockManager.setReplacer(language, code => {\n        return Prism.highlight(code, Prism.languages[language], language);\n      });\n    }\n\n    const {\n      languages\n    } = require(\"prismjs/components\");\n\n    for (const language in languages) {\n      if (language !== \"meta\" && languages[language].option !== \"default\") {\n        registerRequire(language);\n      }\n    }\n  };\n\n  const youtube = () => {\n    ToastEditor.codeBlockManager.setReplacer(\"youtube\", youtubeId => {\n      const wrapperId = `yt${Math.random().toString(36).substr(2, 10)}`;\n      setTimeout(renderYoutube.bind(null, wrapperId, youtubeId), 0);\n      return `<div id=\"${wrapperId}\"></div>`;\n    });\n  };\n\n  function renderYoutube(wrapperId, youtubeId) {\n    const el = document.querySelector(`#${wrapperId}`);\n    el.innerHTML = `<iframe width=\"420\" height=\"315\" src=\"https://www.youtube.com/embed/${youtubeId}\"></iframe>`;\n  }\n\n  return /*#__PURE__*/_jsxDEV(Editor, _objectSpread(_objectSpread({}, props), {}, {\n    plugins: [colorSyntaxPlugin, youtube, prism],\n    ref: props.forwardedRef\n  }), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 10\n  }, this);\n};\n\nexport default TuiEditorWrapper;","map":{"version":3,"sources":["/Users/loel/Documents/loel-blog/src/components/TuiEditorWrapper.tsx"],"names":["React","ToastEditor","Editor","colorSyntaxPlugin","Prism","TuiEditorWrapper","props","prism","registerRequire","language","requires","languages","require","forEach","item","registerLanguage","codeBlockManager","setReplacer","code","highlight","option","youtube","youtubeId","wrapperId","Math","random","toString","substr","setTimeout","renderYoutube","bind","el","document","querySelector","innerHTML","forwardedRef"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,kBAAxB;AACA,SAASC,MAAT,QAAoC,wBAApC;AACA,OAAOC,iBAAP,MAA8B,sCAA9B;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAO,0BAAP;;AAMA,MAAMC,gBAAgB,GAAIC,KAAD,IAAwC;AAC/D,QAAMC,KAAK,GAAG,MAAM;AAClB,aAASC,eAAT,CAAyBC,QAAzB,EAA2C;AACzC,YAAMC,QAAQ,GAAGC,SAAS,CAACF,QAAD,CAAT,CAAoBG,OAArC;;AACA,UAAIF,QAAJ,EAAc;AACZ,YAAI,OAAOA,QAAP,KAAoB,QAAxB,EAAkC;AAChCF,UAAAA,eAAe,CAACE,QAAD,CAAf;AACD,SAFD,MAEO;AACLA,UAAAA,QAAQ,CAACG,OAAT,CAAkBC,IAAD,IAAkBN,eAAe,CAACM,IAAD,CAAlD;AACD;;AACDC,QAAAA,gBAAgB,CAACN,QAAD,CAAhB;AACD,OAPD,MAOO;AACLM,QAAAA,gBAAgB,CAACN,QAAD,CAAhB;AACD;AACF;;AAED,aAASM,gBAAT,CAA0BN,QAA1B,EAA4C;AAC1CG,MAAAA,OAAO,CAAE,4BAA2BH,QAAS,SAAtC,CAAP;;AACAR,MAAAA,WAAW,CAACe,gBAAZ,CAA6BC,WAA7B,CAAyCR,QAAzC,EAAoDS,IAAD,IAAkB;AACnE,eAAOd,KAAK,CAACe,SAAN,CAAgBD,IAAhB,EAAsBd,KAAK,CAACO,SAAN,CAAgBF,QAAhB,CAAtB,EAAiDA,QAAjD,CAAP;AACD,OAFD;AAGD;;AAED,UAAM;AAAEE,MAAAA;AAAF,QAAgBC,OAAO,CAAC,oBAAD,CAA7B;;AAEA,SAAK,MAAMH,QAAX,IAAuBE,SAAvB,EAAkC;AAChC,UAAIF,QAAQ,KAAK,MAAb,IAAuBE,SAAS,CAACF,QAAD,CAAT,CAAoBW,MAApB,KAA+B,SAA1D,EAAqE;AACnEZ,QAAAA,eAAe,CAACC,QAAD,CAAf;AACD;AACF;AACF,GA7BD;;AA8BA,QAAMY,OAAO,GAAG,MAAM;AACpBpB,IAAAA,WAAW,CAACe,gBAAZ,CAA6BC,WAA7B,CAAyC,SAAzC,EAAqDK,SAAD,IAAuB;AACzE,YAAMC,SAAS,GAAI,KAAIC,IAAI,CAACC,MAAL,GAAcC,QAAd,CAAuB,EAAvB,EAA2BC,MAA3B,CAAkC,CAAlC,EAAqC,EAArC,CAAyC,EAAhE;AAEAC,MAAAA,UAAU,CAACC,aAAa,CAACC,IAAd,CAAmB,IAAnB,EAAyBP,SAAzB,EAAoCD,SAApC,CAAD,EAAiD,CAAjD,CAAV;AAEA,aAAQ,YAAWC,SAAU,UAA7B;AACD,KAND;AAOD,GARD;;AAUA,WAASM,aAAT,CAAuBN,SAAvB,EAA0CD,SAA1C,EAA6D;AAC3D,UAAMS,EAAE,GAAGC,QAAQ,CAACC,aAAT,CAAwB,IAAGV,SAAU,EAArC,CAAX;AAEAQ,IAAAA,EAAE,CAAEG,SAAJ,GAAiB,uEAAsEZ,SAAU,aAAjG;AACD;;AAED,sBAAO,QAAC,MAAD,kCAAYhB,KAAZ;AAAmB,IAAA,OAAO,EAAE,CAACH,iBAAD,EAAoBkB,OAApB,EAA6Bd,KAA7B,CAA5B;AAAiE,IAAA,GAAG,EAAED,KAAK,CAAC6B;AAA5E;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAhDD;;AAkDA,eAAe9B,gBAAf","sourcesContent":["import React from \"react\";\nimport ToastEditor from \"@toast-ui/editor\";\nimport { Editor, EditorProps } from \"@toast-ui/react-editor\";\nimport colorSyntaxPlugin from \"@toast-ui/editor-plugin-color-syntax\";\nimport Prism from \"prismjs\";\nimport \"prismjs/themes/prism.css\";\n\nexport interface TuiEditorWithForwardedProps extends EditorProps {\n  forwardedRef?: React.MutableRefObject<Editor>;\n}\n\nconst TuiEditorWrapper = (props: TuiEditorWithForwardedProps) => {\n  const prism = () => {\n    function registerRequire(language: string) {\n      const requires = languages[language].require;\n      if (requires) {\n        if (typeof requires === \"string\") {\n          registerRequire(requires);\n        } else {\n          requires.forEach((item: string) => registerRequire(item));\n        }\n        registerLanguage(language);\n      } else {\n        registerLanguage(language);\n      }\n    }\n\n    function registerLanguage(language: string) {\n      require(`prismjs/components/prism-${language}.min.js`);\n      ToastEditor.codeBlockManager.setReplacer(language, (code: string) => {\n        return Prism.highlight(code, Prism.languages[language], language);\n      });\n    }\n\n    const { languages } = require(\"prismjs/components\");\n\n    for (const language in languages) {\n      if (language !== \"meta\" && languages[language].option !== \"default\") {\n        registerRequire(language);\n      }\n    }\n  };\n  const youtube = () => {\n    ToastEditor.codeBlockManager.setReplacer(\"youtube\", (youtubeId: string) => {\n      const wrapperId = `yt${Math.random().toString(36).substr(2, 10)}`;\n\n      setTimeout(renderYoutube.bind(null, wrapperId, youtubeId), 0);\n\n      return `<div id=\"${wrapperId}\"></div>`;\n    });\n  };\n\n  function renderYoutube(wrapperId: string, youtubeId: string) {\n    const el = document.querySelector(`#${wrapperId}`);\n\n    el!.innerHTML = `<iframe width=\"420\" height=\"315\" src=\"https://www.youtube.com/embed/${youtubeId}\"></iframe>`;\n  }\n\n  return <Editor {...props} plugins={[colorSyntaxPlugin, youtube, prism]} ref={props.forwardedRef} />;\n};\n\nexport default TuiEditorWrapper;\n"]},"metadata":{},"sourceType":"module"}
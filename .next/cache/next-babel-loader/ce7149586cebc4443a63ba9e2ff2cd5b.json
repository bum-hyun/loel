{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from \"react\";\nimport ToastEditor from \"@toast-ui/editor\";\nimport { Editor } from \"@toast-ui/react-editor\";\nimport colorSyntaxPlugin from \"@toast-ui/editor-plugin-color-syntax\";\nimport Prism from \"prismjs\";\nimport \"prismjs/themes/prism.css\";\n\nvar TuiEditorWrapper = function TuiEditorWrapper(props) {\n  var prism = function prism() {\n    function registerRequire(language) {\n      var requires = languages[language].require;\n\n      if (requires) {\n        if (typeof requires === \"string\") {\n          registerRequire(requires);\n        } else {\n          requires.forEach(function (item) {\n            return registerRequire(item);\n          });\n        }\n\n        registerLanguage(language);\n      } else {\n        registerLanguage(language);\n      }\n    }\n\n    function registerLanguage(language) {\n      require(\"prismjs/components/prism-\".concat(language, \".min.js\"));\n\n      ToastEditor.codeBlockManager.setReplacer(language, function (code) {\n        return Prism.highlight(code, Prism.languages[language], language);\n      });\n    }\n\n    var _require = require(\"prismjs/components\"),\n        languages = _require.languages;\n\n    for (var language in languages) {\n      if (language !== \"meta\" && languages[language].option !== \"default\") {\n        registerRequire(language);\n      }\n    }\n  };\n\n  var youtube = function youtube() {\n    ToastEditor.codeBlockManager.setReplacer(\"youtube\", function (youtubeId) {\n      var wrapperId = \"yt\".concat(Math.random().toString(36).substr(2, 10));\n      setTimeout(renderYoutube.bind(null, wrapperId, youtubeId), 0);\n      return \"<div id=\\\"\".concat(wrapperId, \"\\\"></div>\");\n    });\n  };\n\n  function renderYoutube(wrapperId, youtubeId) {\n    var el = document.querySelector(\"#\".concat(wrapperId));\n    el.innerHTML = \"<iframe width=\\\"420\\\" height=\\\"315\\\" src=\\\"https://www.youtube.com/embed/\".concat(youtubeId, \"\\\"></iframe>\");\n  }\n\n  return /*#__PURE__*/_jsx(Editor, _objectSpread(_objectSpread({}, props), {}, {\n    plugins: [colorSyntaxPlugin, youtube, prism],\n    ref: props.forwardedRef\n  }));\n};\n\nexport default TuiEditorWrapper;","map":null,"metadata":{},"sourceType":"module"}
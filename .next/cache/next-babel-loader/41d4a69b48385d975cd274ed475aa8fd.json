{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\nimport styled from \"styles/styled\";\nimport { css } from \"@emotion/core\";\n\nconst Button = (_ref) => {\n  let {\n    width,\n    height,\n    size,\n    variant,\n    shape,\n    disabled,\n    children\n  } = _ref,\n      rest = _objectWithoutProperties(_ref, [\"width\", \"height\", \"size\", \"variant\", \"shape\", \"disabled\", \"children\"]);\n\n  return /*#__PURE__*/_jsx(StyledButton, _objectSpread(_objectSpread({\n    width: width ? width : \"\",\n    height: height ? height : \"\",\n    variant: variant,\n    size: size,\n    shape: shape,\n    disabled: disabled\n  }, rest), {}, {\n    children: children\n  }));\n};\n\nButton.defaultProps = {\n  variant: \"primary\",\n  size: \"medium\",\n  shape: \"default\",\n  disabled: false\n};\nexport default Button;\nconst variant = {\n  primary: css`\n    background: #538cff;\n    color: white;\n  `,\n  secondary: css`\n    background: #9ea9af;\n    color: #fff;\n  `,\n  success: css`\n    background: #64d849;\n    color: #fff;\n  `,\n  danger: css`\n    background: #f86b51;\n    color: #fff;\n  `,\n  warning: css`\n    background: #f4c22b;\n    color: #fff;\n  `,\n  info: css`\n    background: #09c3c8;\n    color: #fff;\n  `,\n  dark: css`\n    background: #4a5256;\n    color: #fff;\n  `\n};\nconst shape = {\n  default: css`\n    border-radius: 4px;\n  `,\n  square: css`\n    border-radius: 0;\n  `,\n  circle: css`\n    border-radius: 20px;\n  `\n};\nconst size = {\n  small: css`\n    padding: 0 14px;\n    height: 28px;\n    font-size: 12px;\n  `,\n  medium: css`\n    padding: 0 16px;\n    height: 34px;\n    font-size: 16px;\n  `,\n  big: css`\n    padding: 0 24px;\n    height: 40px;\n    font-size: 18px;\n  `\n};\nconst StyledButton = styled.button`\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  font-weight: 600;\n  ${p => p.width ? typeof p.width === \"number\" ? `width: ${p.width}px !important;` : `width: ${p.width} !important;` : \"\"}\n  ${p => p.height ? typeof p.height === \"number\" ? `height: ${p.height}px !important;` : `height: ${p.height} !important;` : \"\"}\n  border: none;\n  cursor: pointer;\n  outline: none;\n  transition: opacity ease-in-out 0.3s;\n\n  &:hover:enabled {\n    opacity: 0.7;\n  }\n\n  &:active:enabled {\n    opacity: 0.7;\n  }\n\n  &:disabled {\n    opacity: 0.7;\n    cursor: not-allowed;\n  }\n\n  ${p => {\n  if (p.variant) {\n    return variant[p.variant];\n  } else {\n    return variant.primary;\n  }\n}}\n\n  ${p => {\n  if (p.size) {\n    return size[p.size];\n  } else {\n    return size.medium;\n  }\n}}\n\n  ${p => {\n  if (p.shape) {\n    return shape[p.shape];\n  } else {\n    return shape.default;\n  }\n}}\n`;","map":null,"metadata":{},"sourceType":"module"}